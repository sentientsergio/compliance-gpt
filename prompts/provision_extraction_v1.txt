# Provision Extraction Prompt v1
# Status: âœ… Approved (POC implementation)
# Model: OpenAI GPT-4.1
# Date: 2025-10-19
# Purpose: Extract provision boundaries and metadata from retirement plan documents

Extract up to {max_provisions} key provisions from this retirement plan document.

PROVISION TYPES TO EXTRACT:
{provision_types}

For each provision, output a JSON object with these fields:
- provision_type: One of the types listed above
- section_reference: The section number/letter from the document (e.g., "Section 2.01", "Article III")
- section_title: The section title if present
- provision_text: The FULL text of the provision (don't truncate)
- confidence_score: Your confidence in the extraction (0.0-1.0)
- extracted_entities: Object with:
  - ages: List of age values mentioned
  - service_years: List of service requirements in years
  - percentages: List of percentages as decimals (e.g., 0.03 for 3%)
  - keywords: Important terms (e.g., ["Safe Harbor", "Highly Compensated Employee"])

EXTRACTION RULES:
1. Extract complete provision text (don't truncate mid-sentence)
2. Preserve original section numbers from document
3. If you're uncertain about provision type, use lower confidence score
4. Extract at most {max_provisions} provisions total
5. Focus on the most important/substantive provisions

OUTPUT FORMAT:
Return a JSON array of provision objects. Example:

```json
[
  {{
    "provision_type": "eligibility",
    "section_reference": "Section 2.01",
    "section_title": "Eligibility to Participate",
    "provision_text": "Full text of the provision here...",
    "confidence_score": 0.95,
    "extracted_entities": {{
      "ages": [21],
      "service_years": [1.0],
      "percentages": [],
      "keywords": ["Year of Service", "Hours of Service"]
    }}
  }}
]
```

Return ONLY the JSON array, no other text.
